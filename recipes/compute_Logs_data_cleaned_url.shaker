{
  "columnsSelection": {
    "mode": "ALL"
  },
  "explorationSampling": {
    "_refreshTrigger": 0,
    "selection": {
      "filter": {
        "distinct": false,
        "enabled": false
      },
      "latestPartitionsN": 1,
      "maxRecords": 10000,
      "ordering": {
        "rules": [],
        "enabled": false
      },
      "withinFirstN": -1,
      "partitionSelectionMethod": "ALL",
      "maxStoredBytes": 104857600,
      "targetRatio": 0.02,
      "maxReadUncompressedBytes": -1,
      "samplingMethod": "HEAD_SEQUENTIAL"
    },
    "autoRefreshSample": false
  },
  "explorationFilters": [],
  "origin": "PREPARE_RECIPE",
  "exploreUIParams": {
    "autoRefresh": true
  },
  "steps": [
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "",
        "mapping": [
          {
            "from": "http://www.dataiku.com",
            "to": "http://dataiku.com"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "location",
          "referer"
        ],
        "appliesTo": "COLUMNS",
        "stopAfterFirstMatch": false,
        "matching": "SUBSTRING"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "name": "Group URLs",
      "metaType": "GROUP",
      "disabled": false,
      "steps": [
        {
          "preview": false,
          "metaType": "PROCESSOR",
          "disabled": false,
          "type": "CreateColumnWithGREL",
          "params": {
            "expression": "if(contains(referer,\u0027google\u0027),\n\t\u0027http://google.com\u0027,\n    if(contains(referer,\u0027kaggle\u0027),\n\t\t\u0027http://kaggle.com\u0027,\n    \tif(contains(referer,\u0027linkedin\u0027),\n\t\t\t\u0027http://linkedin.com\u0027,\n    \t\tif(contains(referer,\u0027disqus\u0027),\n\t\t\t\t\u0027http://disqus.com\u0027,\n    \t\t\tif(contains(referer,\u0027http://dataiku.com\u0027),\n\t\t\t\t\treferer,\n    \t\t\t\t\u0027http://others.com\u0027\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n)",
            "column": "referer"
          },
          "alwaysShowComment": false
        },
        {
          "preview": false,
          "metaType": "PROCESSOR",
          "disabled": false,
          "type": "CreateColumnWithGREL",
          "params": {
            "expression": "if(contains(referer,\u0027http://dataiku.com\u0027) \u0026\u0026 substring(referer,0,18) !\u003d \u0027http://dataiku.com\u0027,\u0027http://others.com\u0027, referer)",
            "column": "referer"
          },
          "alwaysShowComment": false
        },
        {
          "preview": false,
          "metaType": "PROCESSOR",
          "disabled": false,
          "type": "CreateColumnWithGREL",
          "params": {
            "expression": "if(contains(location,\u0027http://dataiku.com/blog\u0027),\u0027http://dataiku.com/blog/\u0027,location)",
            "column": "location"
          },
          "alwaysShowComment": false
        },
        {
          "preview": false,
          "metaType": "PROCESSOR",
          "disabled": false,
          "type": "CreateColumnWithGREL",
          "params": {
            "expression": "if(contains(referer,\u0027http://dataiku.com/blog\u0027),\u0027http://dataiku.com/blog/\u0027,referer)",
            "column": "referer"
          },
          "alwaysShowComment": false
        }
      ],
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FlagOnValue",
      "params": {
        "normalizationMode": "EXACT",
        "booleanMode": "AND",
        "columns": [
          "referer",
          "location"
        ],
        "values": [
          "//dataiku.com"
        ],
        "matchingMode": "FULL_STRING",
        "action": "FLAG",
        "appliesTo": "COLUMNS",
        "flagColumn": "flag_dtku"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "CreateColumnWithGREL",
      "params": {
        "expression": "location",
        "column": "location"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "",
        "mapping": [
          {
            "from": "http://dataiku.com",
            "to": ""
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "location"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "FULL_STRING"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "",
        "mapping": [
          {
            "from": "http://dataiku.com",
            "to": ""
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "referer"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "FULL_STRING"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "CreateColumnWithGREL",
      "params": {
        "expression": "if(location \u003d\u003d \u0027/\u0027,\u0027dataiku.com/\u0027, location)",
        "column": "location"
      },
      "alwaysShowComment": false
    },
    {
      "preview": true,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "CreateColumnWithGREL",
      "params": {
        "expression": "if(referer \u003d\u003d \u0027/\u0027,\u0027dataiku.com/\u0027, referer)",
        "column": "referer"
      },
      "alwaysShowComment": false
    }
  ],
  "maxProcessedMemTableBytes": -1,
  "previewMode": "ALL_ROWS",
  "vizSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false
  },
  "analysisColumnData": {},
  "sorting": [],
  "globalSearchQuery": "",
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  }
}